-- SQL Queries for Monitoring and Analysis
SELECT * FROM pg_stat_activity;

-- Count active connections with a non-zero execution time
SELECT count(*) AS x
FROM pg_stat_activity
WHERE overall_time > 0;

-- Find all tags where the display name contains 'PV'
SELECT *
FROM taglist
WHERE display_name LIKE '%PV%';

-- Count tags by their object type for tags containing 'PV'
SELECT
    object_type,
    count(*) AS tag_count
FROM taglist
WHERE display_name LIKE '%PV%'
GROUP BY
    object_type;

-- Calculate the sum of numeric values for a group of HMI tags
-- Note: Assumes a 'tagvalues' table with a 'numeric_value' column
SELECT sum(numeric_value) AS total_value
FROM tagvalues
WHERE tag_name LIKE '%HMI_Tag_%';

-- Filter logged values by timestamp and quality for a specific logging tag
-- Note: Assumes a 'loggedtagvalues' table
SELECT *
FROM loggedtagvalues
WHERE
    timestamp > '2025-07-27T14:00:00Z'
    AND tag_name LIKE '%::HMI_Tag_%:LoggingTag_1'
    AND quality = 'GOOD_CASCADE';

-- Get aggregate values (min, max, avg) for a specific tag over a time range
-- Note: Assumes a 'loggedtagvalues' table
SELECT
    tag_name,
    min(numeric_value) AS min_value,
    max(numeric_value) AS max_value,
    avg(numeric_value) AS average_value
FROM loggedtagvalues
WHERE
    timestamp > '2025-07-27T14:00:00Z'
    AND tag_name LIKE '%::HMI_Tag_%:LoggingTag_1'
    AND quality = 'GOOD_CASCADE'
GROUP BY
    tag_name;

-- Count the number of alarms in each state (e.g., ACTIVE, ACKNOWLEDGED)
SELECT
    state,
    count(*) AS alarm_count
FROM activealarms
GROUP BY
    state
ORDER BY
    alarm_count DESC;

-- Count active alarms
SELECT count(*) FROM activealarms;

-- Count high-priority alarms in a specific group
SELECT count(*)
FROM activealarms
WHERE priority > 10 AND alarm_group_id = 0;

-- Calculate the average time to acknowledge alarms, grouped by priority
-- This shows how long alarms of a certain priority take to get acknowledged.
SELECT
    priority,
    avg(acknowledgment_time - raise_time) AS avg_acknowledgment_time
FROM activealarms
WHERE
    acknowledgment_time IS NOT NULL -- Only consider alarms that have been acknowledged
GROUP BY
    priority
ORDER BY
    priority DESC;

-- Find high-priority alarms that are still active and unacknowledged
SELECT
    name,
    priority,
    raise_time,
    area,
    event_text
FROM activealarms
WHERE
    priority >= 100 -- Assuming 100+ is high priority
    AND state = 'ACTIVE'
    AND acknowledgment_time IS NULL
ORDER BY
    raise_time ASC; -- Show the oldest ones first

-- Show the number of alarms generated by each host machine or area
SELECT
    area,
    host_name,
    count(*) AS total_alarms
FROM activealarms
GROUP BY
    area,
    host_name
ORDER BY
    total_alarms DESC;

-- =================================================================
-- New Queries for the 'taglist' Table
-- =================================================================

-- Count the number of tags for each data type
SELECT
    data_type,
    count(*) AS tag_count
FROM taglist
GROUP BY
    data_type
ORDER BY
    tag_count DESC;

-- Find object types that have more than 50 tags associated with them
SELECT
    object_type,
    count(*) AS number_of_tags
FROM taglist
GROUP BY
    object_type
HAVING
    count(*) > 50
ORDER BY
    number_of_tags DESC;